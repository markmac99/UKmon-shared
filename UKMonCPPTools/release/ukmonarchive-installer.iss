; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Monthly Archiver"
#define MyAppVersion "2.0.0.0"
#define MyAppPublisher "Mark McIntyre"
#define MyAppURL "https://ukmeteornetwork.co.uk/archive/"
#define MyAppExeName "ArchiveUploader.exe"
#define mydir "UKMON"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{DCD95969-3295-4BEF-8142-4F94F4BCB416}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={commonpf}\{#mydir}
DisableProgramGroupPage=yes
InfoBeforeFile=archiver_instructions.txt
OutputBaseFilename=UKMonMonthlyArchiverSetup
Compression=lzma
SolidCompression=yes
SignTool=Standard sign /f "c:\users\mark\documents\projects\certs\markmcintyreDS.pfx" /p Wombat33 /d $qUKMON Archiver Installer$q $f

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked
Name: "quicklaunchicon"; Description: "{cm:CreateQuickLaunchIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked; OnlyBelowVersion: 0,6.1

[Files]
Source: "ArchiveUploader.exe"; DestDir: "{commonpf}\{#mydir}"; Flags: ignoreversion
Source: "vc_redist.x86.exe"; DestDir: "{tmp}"; Flags: deleteafterinstall
Source: "vc_redist.x64.exe"; DestDir: "{tmp}"; Flags: deleteafterinstall
Source: "aws-cpp-sdk-core.dll"; DestDir: "{commonpf}\{#mydir}"; Flags: onlyifdoesntexist
Source: "aws-cpp-sdk-s3.dll"; DestDir: "{commonpf}\{#mydir}"; Flags: onlyifdoesntexist
Source: "aws-c-common.dll"; DestDir: "{commonpf}\{#mydir}"; Flags: onlyifdoesntexist
Source: "aws-c-event-stream.dll"; DestDir: "{commonpf}\{#mydir}"; Flags: onlyifdoesntexist
Source: "aws-checksums.dll"; DestDir: "{commonpf}\{#mydir}"; Flags: onlyifdoesntexist
Source: "mfc140u.dll"; DestDir: "{commonpf}\{#mydir}"; Flags: onlyifdoesntexist
Source: "msvcp140.dll"; DestDir: "{commonpf}\{#mydir}"; Flags: onlyifdoesntexist
Source: "ucrtbase.dll"; DestDir: "{commonpf}\{#mydir}"; Flags: onlyifdoesntexist
Source: "vcruntime140.dll"; DestDir: "{commonpf}\{#mydir}"; Flags: onlyifdoesntexist
Source: "UKMonArchiver.ini"; DestDir: "{localappdata}\UKMON"; Flags: onlyifdoesntexist

[Icons]
Name: "{commonprograms}\{#mydir}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{commonprograms}\{#mydir}\{#MyAppName} Configuration"; Filename: "{win}\notepad.exe"; Parameters: "{userappdata}\..\local\ukmon\ukmonarchiver.ini"
Name: "{commonprograms}\{#mydir}\Uninstall {#MyAppName}"; Filename: "{uninstallexe}"
Name: "{commondesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon
Name: "{userappdata}\Microsoft\Internet Explorer\Quick Launch\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: quicklaunchicon

#define VCmsg "Installing Microsoft Visual C++ Redistributable...."

[Run]
Filename: "{tmp}\vc_redist.x86.exe"; StatusMsg: "{#VCmsg}"; Check: not IsWin64 and not VCinstalled
Filename: "{tmp}\vc_redist.x64.exe"; StatusMsg: "{#VCmsg}"; Check: IsWin64 and not VCinstalled
Filename: "{win}\notepad.exe"; Parameters: "{userappdata}\..\local\ukmon\ukmonarchiver.ini";

[Code]
function VCinstalled: Boolean;
 // By Michael Weiner <mailto:spam@cogit.net>
 // Function for Inno Setup Compiler
 // 13 November 2015
 // Returns True if Microsoft Visual C++ Redistributable is installed, otherwise False.
 // The programmer may set the year of redistributable to find; see below.
 var
  names: TArrayOfString;
  i: Integer;
  dName, key, year: String;
 begin
  // Year of redistributable to find; leave null to find installation for any year.
  year := '2019';
  Result := False;
  key := 'Software\Microsoft\Windows\CurrentVersion\Uninstall';
  // Get an array of all of the uninstall subkey names.
  if RegGetSubkeyNames(HKEY_LOCAL_MACHINE, key, names) then
   // Uninstall subkey names were found.
   begin
    i := 0
    while ((i < GetArrayLength(names)) and (Result = False)) do
     // The loop will end as soon as one instance of a Visual C++ redistributable is found.
     begin
      // For each uninstall subkey, look for a DisplayName value.
      // If not found, then the subkey name will be used instead.
      if not RegQueryStringValue(HKEY_LOCAL_MACHINE, key + '\' + names[i], 'DisplayName', dName) then
       dName := names[i];
      // See if the value contains both of the strings below.
      Result := (Pos(Trim('Visual C++ ' + year),dName) * Pos('Runtime',dName) <> 0)
      i := i + 1;
     end;
   end;
 end;
